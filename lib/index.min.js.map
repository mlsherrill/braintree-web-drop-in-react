{"version":3,"sources":["../src/index.js"],"names":["_react","_interopRequireDefault","require","_reactDom","_propTypes","_braintreeWebDropIn","DropIn","BraintreeWebDropIn","create","_objectSpread","container","ReactDOM","findDOMNode","this","wrapper","preselectVaultedPaymentMethod","props","options","instance","on","_this2","onNoPaymentMethodRequestable","_this2$props","apply","arguments","onPaymentMethodRequestable","_this2$props2","onPaymentOptionSelected","_this2$props3","onCardBlur","_this2$props4","onCardFocus","_this2$props5","onValidityChange","_this2$props6","onInstance","onError","_context","t0","teardown","_this3","createElement","ref","React","Component","PropTypes","object","isRequired","bool","func"],"mappings":"wgCAAA,IAAAA,OAAAC,uBAAAC,QAAA,UACA,IAAAC,UAAAF,uBAAAC,QAAA,cACA,IAAAE,WAAAH,uBAAAC,QAAA,eACA,IAAAG,oBAAAJ,uBAAAC,QAAA,+hDAEqBI,44BA4BOC,oBAAAA,WAAmBC,OAAnBC,cAAA,CACpBC,UAAWC,UAAAA,WAASC,YAAYC,KAAKC,SACrCC,8BAA+BF,KAAKG,MAAMD,+BACvCF,KAAKG,MAAMC,iBAHhBJ,KAAKK,uBAMLL,KAAKK,SAASC,GAAG,8BAA8B,WAC7C,GAAIC,OAAKJ,MAAMK,6BAA8B,CAAA,IAAAC,cAC3CA,aAAAF,OAAKJ,OAAMK,6BAAXE,MAAAD,aAAAE,eAGJX,KAAKK,SAASC,GAAG,4BAA4B,WAC3C,GAAIC,OAAKJ,MAAMS,2BAA4B,CAAA,IAAAC,eACzCA,cAAAN,OAAKJ,OAAMS,2BAAXF,MAAAG,cAAAF,eAGJX,KAAKK,SAASC,GAAG,yBAAyB,WACxC,GAAIC,OAAKJ,MAAMW,wBAAyB,CAAA,IAAAC,eACtCA,cAAAR,OAAKJ,OAAMW,wBAAXJ,MAAAK,cAAAJ,eAGJX,KAAKK,SAASC,GAAG,aAAa,WAC5B,GAAIC,OAAKJ,MAAMa,WAAY,CAAA,IAAAC,eACzBA,cAAAV,OAAKJ,OAAMa,WAAXN,MAAAO,cAAAN,eAGJX,KAAKK,SAASC,GAAG,cAAc,WAC7B,GAAIC,OAAKJ,MAAMe,YAAa,CAAA,IAAAC,eAC1BA,cAAAZ,OAAKJ,OAAMe,YAAXR,MAAAS,cAAAR,eAGJX,KAAKK,SAASC,GAAG,kBAAkB,WACjC,GAAIC,OAAKJ,MAAMiB,iBAAkB,CAAA,IAAAC,eAC/BA,cAAAd,OAAKJ,OAAMiB,iBAAXV,MAAAW,cAAAV,eAIJ,GAAIX,KAAKG,MAAMmB,WAAY,CACzBtB,KAAKG,MAAMmB,WAAWtB,KAAKK,2FAG7B,GAAIL,KAAKG,MAAMoB,QAAS,CACtBvB,KAAKG,MAAMoB,QAAXC,SAAAC,8cAMAzB,KAAKK,yDACDL,KAAKK,SAASqB,kQAMtB,OAAO,8CAGA,IAAAC,OAAA3B,KACP,OAAOb,OAAA,WAAAyC,cAAA,MAAA,CAAKC,IAAK,SAAAA,IAACA,MAAD,OAAUF,OAAK1B,QAAU4B,2BAvFVC,OAAAA,WAAMC,qEAArBtC,qBACE,sDADFA,mBAGA,CACjBW,QAAS4B,WAAAA,WAAUC,OAAOC,WAE1BhC,8BAA+B8B,WAAAA,WAAUG,KAEzCb,WAAYU,WAAAA,WAAUI,KACtBb,QAASS,WAAAA,WAAUI,KAEnB5B,6BAA8BwB,WAAAA,WAAUI,KACxCxB,2BAA4BoB,WAAAA,WAAUI,KACtCtB,wBAAyBkB,WAAAA,WAAUI,KACnCpB,WAAYgB,WAAAA,WAAUI,KACtBlB,YAAac,WAAAA,WAAUI,KACvBhB,iBAAkBY,WAAAA,WAAUI,uCAhBX3C,sBAmBG,CACpBS,8BAA+B","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\nimport BraintreeWebDropIn from \"braintree-web-drop-in\";\n\nexport default class DropIn extends React.Component {\n  static displayName = \"BraintreeWebDropIn\";\n\n  static propTypes = {\n    options: PropTypes.object.isRequired,\n    // @deprecated: Include inside options\n    preselectVaultedPaymentMethod: PropTypes.bool,\n\n    onInstance: PropTypes.func,\n    onError: PropTypes.func,\n\n    onNoPaymentMethodRequestable: PropTypes.func,\n    onPaymentMethodRequestable: PropTypes.func,\n    onPaymentOptionSelected: PropTypes.func,\n    onCardBlur: PropTypes.func,\n    onCardFocus: PropTypes.func,\n    onValidityChange: PropTypes.func,\n  };\n\n  static defaultProps = {\n    preselectVaultedPaymentMethod: true,\n  };\n\n  wrapper;\n  instance;\n\n  async componentDidMount() {\n    try {\n      this.instance = await BraintreeWebDropIn.create({\n        container: ReactDOM.findDOMNode(this.wrapper),\n        preselectVaultedPaymentMethod: this.props.preselectVaultedPaymentMethod,\n        ...this.props.options,\n      });\n\n      this.instance.on(\"noPaymentMethodRequestable\", (...args) => {\n        if (this.props.onNoPaymentMethodRequestable) {\n          this.props.onNoPaymentMethodRequestable(...args);\n        }\n      });\n      this.instance.on(\"paymentMethodRequestable\", (...args) => {\n        if (this.props.onPaymentMethodRequestable) {\n          this.props.onPaymentMethodRequestable(...args);\n        }\n      });\n      this.instance.on(\"paymentOptionSelected\", (...args) => {\n        if (this.props.onPaymentOptionSelected) {\n          this.props.onPaymentOptionSelected(...args);\n        }\n      });\n      this.instance.on(\"card:blur\", (...args) => {\n        if (this.props.onCardBlur) {\n          this.props.onCardBlur(...args);\n        }\n      });\n      this.instance.on(\"card:focus\", (...args) => {\n        if (this.props.onCardFocus) {\n          this.props.onCardFocus(...args);\n        }\n      });\n      this.instance.on(\"validityChange\", (...args) => {\n        if (this.props.onValidityChange) {\n          this.props.onValidityChange(...args);\n        }\n      });\n\n      if (this.props.onInstance) {\n        this.props.onInstance(this.instance);\n      }\n    } catch (error) {\n      if (this.props.onError) {\n        this.props.onError(error);\n      }\n    }\n  }\n\n  async componentWillUnmount() {\n    if (this.instance) {\n      await this.instance.teardown();\n    }\n  }\n\n  shouldComponentUpdate() {\n    // Static\n    return false;\n  }\n\n  render() {\n    return <div ref={(ref) => (this.wrapper = ref)} />;\n  }\n}\n"]}